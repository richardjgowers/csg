#!/bin/bash
#
# Copyright 2009 The VOTCA Development Team (http://www.votca.org)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

verbose="no"

#unset stuff from enviorment
unset CSGXMLFILE bondtype bondname CSGSCRIPTDIR  CSGLOG

#failback define
die() {
  echo -e "$*" >&2
  exit 1
}

vecho() {
  [ "$verbose" = "yes" ] && echo -e "$*"
}

show_help () {
  cat << eof
==================================================
========   VOTCA (http://www.votca.org)   ========
==================================================

please submit bugs to bugs@votca.org

${0##*/}, version ${version}



This script runs csg_pmf using source_wrapper

Usage: ${0##*/} --options xmlfile

Allowed options:
    --options FILE   Specify the options xml file to use
-h, --help           Show this help

USES: \$CSGSHARE
eof
}

while [ "${1#-}" != "$1" ]; do
 if [ "${1#--}" = "$1" ] && [ -n "${1:2}" ]; then
    #short opt with arguments here: fc
    if [ "${1#-[fc]}" != "${1}" ]; then
       set -- "${1:0:2}" "${1:2}" "${@:2}"
    else
       set -- "${1:0:2}" "-${1:2}" "${@:2}"
    fi
 fi
 case $1 in
   --options)
    export CSGXMLFILE="$2"
    shift 2;;
   -h | --help)
    show_help
    exit 0;;
  *)
   die "Unknown option '$1'";;
 esac
done

if [ -z "${CSGSHARE}" ]; then
  if [ -f "${0%/*}/../share/votca/scripts/inverse/inverse.sh" ]; then
    #transform it to a global path
    export CSGSHARE="$(cd ${0%/*}/../share/votca;pwd)"
  elif [ -f "@votcashare@/scripts/inverse/inverse.sh" ]; then
    export CSGSHARE="@votcashare@"
  else
    echo "Error: Environment value CSGSHARE is not defined and could not be guessed" >&2
    echo "Export CSGSHARE or source VOTCARC.bash or VOTCARC.csh" >&2
    exit 1
  fi
else
  if [ ! -f ${CSGSHARE}/scripts/inverse/inverse.sh ]; then
    echo "Error: Environment value CSGSHARE seems to be wrong" >&2
    echo "Could not find \${CSGSHARE}/scripts/inverse/inverse.sh" >&2
    echo "Export CSGSHARE or source VOTCARC.bash or VOTCARC.csh" >&2
    exit 1
  fi
fi

CSGSHARE="/people/thnfs/homes/jochum/src/csg/share"

vecho "CSGSHARE is ${CSGSHARE}"
if [ -f ${CSGSHARE}/scripts/inverse/start_framework.sh ]; then
  source ${CSGSHARE}/scripts/inverse/start_framework.sh || die "Could not source start_framework.sh"
else
  die "Could not find start_framework.sh"
fi
add_csg_scriptdir

[ -z "$CSGXMLFILE" ] && die "Script will need some options from the xml file\nPlease specify it with --options option"
[ ! -f "$CSGXMLFILE" ] && die "options xml file '$CSGXMLFILE' not found"

# Step 1 - Initialize
mkdir 01_initialize
do_external initialize_pmf

# Step 2 - Generate configurations
last_step="01_initialize"
mkdir 02_prepare
cd 02_prepare
cp ../$last_step/topol.top .
cp ../$last_step/index.ndx .
cp ../$last_step/grompp.mdp.template .
cp ../$last_step/confout.gro conf.gro
cp ../$last_step/grompp.mdp start_in.mdp
cp ../$last_step/*.itp .

do_external prepare_pmf

# Step 3 - Run simulations
unset last_step
last_step="02_prepare"
mkdir 03_simulate
cp ../$last_step/topol.top .
cp ../$last_step/index.ndx .
cp ../$last_step/grompp.mdp.template .
cp ../$last_step/conf_start*.gro .
cp ../$last_step/*.itp .
cp ../$last_step/dist.xvg .

do_external simulate_pmf

# Step 4 - Calculate pmf
do_external calc_pmf
