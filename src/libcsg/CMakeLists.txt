option(WITH_GMX "Build gromacs reader/writer, disabling leads to reduced functionality!" ON)
option(WITH_GMX_DEVEL "Build against gromacs devel version, very experimental!" OFF)

file(GLOB GMX_SOURCES modules/io/gmx*.cc modules/io/gro*.cc modules/io/pdbtopology*.cc)
file(GLOB NOT_GMX_SOURCES modules/io/gmx_print_version.cc modules/io/gmx_version_nb.cc)
list(REMOVE_ITEM GMX_SOURCES ${NOT_GMX_SOURCES})

file(GLOB IO_SOURCES modules/io/*.cc)
file(GLOB NOT_IO_SOURCES modules/io/mdp*.cc)
list(REMOVE_ITEM IO_SOURCES ${GMX_SOURCES} ${NOT_GMX_SOURCES} ${NOT_IO_SOURCES})

if (WITH_GMX)
  if (WITH_GMX_DEVEL)
    message(WARNING "Using gromacs-5.0, this is very experimental, hope you know what you are doing")
    find_package(GROMACS_D)
    if (GROMACS_D_FOUND)
      set(GMX_PKG libgromacs_d)
      set(GMX_LIBS "${GROMACS_D_LIBRARIES}")
      include_directories(${GROMACS_D_INCLUDE_DIRS})
      add_definitions(${GROMACS_D_DEFINITIONS})
    else(GROMACS_D_FOUND)
      message(WARNING " gromacs-5.0 double precision not found failback to single precision")
      find_package(GROMACS)
      if (NOT GROMACS_FOUND)
        message(FATAL_ERROR "gromacs-5.0 (single or double) not found,  make sure you have also installed the gromacs-5.0 and it's dev package or disable it with -DWITH_GMX=OFF")
      endif (NOT GROMACS_FOUND)
      set(GMX_PKG libgromacs)
      set(GMX_LIBS "${GROMACS_LIBRARIES}")
      include_directories(${GROMACS_INCLUDE_DIRS})
      add_definitions(${GROMACS_DEFINITIONS})
    endif (GROMACS_D_FOUND)
    set(GMX 50)
  else(WITH_GMX_DEVEL)
    find_package(GMX_D)
    if (GMX_D_FOUND)
      set(GMX_PKG libgmx_d)
      set(GMX_LIBS "${GMX_D_LIBRARIES}")
      include_directories(${GMX_D_INCLUDE_DIRS})
      add_definitions(${GMX_D_DEFINITIONS})
    else(GMX_D_FOUND)
      message(WARNING " gromacs-4.5 double precision not found failback to single precision")
      find_package(GMX)
      if (NOT GMX_FOUND)
        message(FATAL_ERROR "gromacs-4.5 (single or double) not found,  make sure you have also installed the gromacs-5.0 and it's dev package or disable it with -DWITH_GMX=OFF. If you have gromacs-5.0 installed enable to build against it with -DWITH_GMX_DEVEL=ON")
      endif (NOT GMX_FOUND)
      set(GMX_PKG libgmx)
      set(GMX_LIBS "${GMX_LIBRARIES}")
      include_directories(${GMX_INCLUDE_DIRS})
      add_definitions(${GMX_DEFINITIONS})
    endif (GMX_D_FOUND)
    set(GMX 45)
  endif (WITH_GMX_DEVEL)
  #general to a bmx builds
  add_executable(gmx_print_version modules/io/gmx_print_version.cc)
  target_link_libraries(gmx_print_version ${GMX_LIBS})
  add_custom_command(OUTPUT gmx_libs_version.h COMMAND gmx_print_version > gmx_libs_version.h DEPENDS gmx_print_version) 
  list(APPEND GMX_SOURCES gmx_libs_version.h)
else(WITH_GMX)
  set(GMX)
  set(GMX_SOURCES)
endif(WITH_GMX)

configure_file(votca_config.h.in ${CMAKE_CURRENT_BINARY_DIR}/votca_config.h)
include_directories(${CMAKE_CURRENT_BINARY_DIR})

add_custom_target(hgversion COMMAND ${CMAKE_COMMAND} -DTOP_SOURCE_DIR="${CMAKE_SOURCE_DIR}" -P ${CMAKE_MODULE_PATH}/hgversion.cmake)
set_property(DIRECTORY APPEND PROPERTY ADDITIONAL_MAKE_CLEAN_FILES hgversion.h)

file(GLOB VOTCA_SOURCES *.cc)
file(GLOB NOT_VOTCA_SOURCES version_nb.cc test.cc)
list(REMOVE_ITEM VOTCA_SOURCES ${NOT_VOTCA_SOURCES})
add_library(votca_csg ${VOTCA_SOURCES} ${GMX_SOURCES} ${IO_SOURCES})
add_dependencies(votca_csg hgversion)
target_link_libraries(votca_csg ${VOTCA_TOOLS_LIBRARIES} ${GMX_LIBS} ${BOOST_LIBRARIES})
install(TARGETS votca_csg LIBRARY DESTINATION ${LIB} ARCHIVE DESTINATION ${LIB})

configure_file(libvotca_csg.pc.in ${CMAKE_CURRENT_BINARY_DIR}/libvotca_csg.pc @ONLY)
install(FILES ${CMAKE_CURRENT_BINARY_DIR}/libvotca_csg.pc DESTINATION ${LIB}/pkgconfig)
set_property(DIRECTORY APPEND PROPERTY ADDITIONAL_MAKE_CLEAN_FILES libvotca_csg.pc votca_config.h)
